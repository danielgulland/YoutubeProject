buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

bootJar {
    baseName = 'youtube-project-service'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'mysql:mysql-connector-java'
    compile 'com.google.guava:guava:27.1-jre'
    compile 'org.apache.commons:commons-lang3:3.0'
    compile 'org.springframework.boot:spring-boot-starter-mail'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.3.RELEASE'
    testCompile 'org.powermock:powermock-module-junit4:2.0.2'
    testCompile 'org.powermock:powermock-api-mockito2:2.0.2'
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standard_out", "standard_error"
        exceptionFormat = 'full'
    }
}

checkstyle {
    toolVersion = "8.18"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            'app/request/**',
                            'app/model/**',
                            'app/constant/**',
                            'app/config/**',
                            'app/Application*'
                    ]
            )
        })
    }
}

check.dependsOn jacocoTestReport